{"ast":null,"code":"var GetApiData=function GetApiData(filterSpecie,filterName){return fetch(\"https://rickandmortyapi.com/api/character/?name=\".concat(filterName,\"&species=\").concat(filterSpecie)).then(function(response){console.log('El Resultado del fetch es',response.status);if(response.ok)return response.json();else return null;}).then(function(data){if(!data){console.log('El response trajo error, por lo que se devuelve array vacio');return[];}console.log('La cantidad de elementos que encuentra en Api es ',data);var ApiData=data.results.map(function(character){return{id:character.id,name:character.name,status:character.status,species:character.species,image:character.image,origin:character.origin.name,episodes:character.episode.length};});console.log('La data extraida para la búsqueda por ',filterName,filterSpecie,'es:');return ApiData;});};export default GetApiData;","map":{"version":3,"sources":["/home/adalaber/Escritorio/Adalab/Evaluaciones/modulo-3-evaluacion-final-JennyBienes/src/services/contactsApi.js"],"names":["GetApiData","filterSpecie","filterName","fetch","then","response","console","log","status","ok","json","data","ApiData","results","map","character","id","name","species","image","origin","episodes","episode","length"],"mappings":"AAAA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,YAAD,CAAeC,UAAf,CAA8B,CAC/C,MAAOC,CAAAA,KAAK,2DACyCD,UADzC,qBAC+DD,YAD/D,EAAL,CAGJG,IAHI,CAGC,SAACC,QAAD,CAAc,CAClBC,OAAO,CAACC,GAAR,CAAa,2BAAb,CAA0CF,QAAQ,CAACG,MAAnD,EACE,GAAIH,QAAQ,CAACI,EAAb,CAAiB,MAAOJ,CAAAA,QAAQ,CAACK,IAAT,EAAP,CAAjB,IACG,OAAO,KAAP,CACN,CAPI,EAQJN,IARI,CAQC,SAACO,IAAD,CAAU,CACd,GAAI,CAACA,IAAL,CAAW,CACVL,OAAO,CAACC,GAAR,CAAY,6DAAZ,EACC,MAAO,EAAP,CACD,CACDD,OAAO,CAACC,GAAR,CAAY,mDAAZ,CAAiEI,IAAjE,EACA,GAAMC,CAAAA,OAAO,CAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiB,SAACC,SAAD,CAAe,CAC9C,MAAO,CACLC,EAAE,CAAED,SAAS,CAACC,EADT,CAELC,IAAI,CAAEF,SAAS,CAACE,IAFX,CAGLT,MAAM,CAAEO,SAAS,CAACP,MAHb,CAILU,OAAO,CAAEH,SAAS,CAACG,OAJd,CAKLC,KAAK,CAAEJ,SAAS,CAACI,KALZ,CAMLC,MAAM,CAAEL,SAAS,CAACK,MAAV,CAAiBH,IANpB,CAOLI,QAAQ,CAAEN,SAAS,CAACO,OAAV,CAAkBC,MAPvB,CAAP,CASD,CAVe,CAAhB,CAYAjB,OAAO,CAACC,GAAR,CACE,wCADF,CAEEL,UAFF,CAGED,YAHF,CAIE,KAJF,EAOA,MAAOW,CAAAA,OAAP,CACD,CAlCI,CAAP,CAmCD,CApCD,CAsCA,cAAeZ,CAAAA,UAAf","sourcesContent":["const GetApiData = (filterSpecie, filterName) => {\n  return fetch(\n    `https://rickandmortyapi.com/api/character/?name=${filterName}&species=${filterSpecie}`\n  )\n    .then((response) => {\n      console.log ('El Resultado del fetch es', response.status)\n        if (response.ok) return response.json();\n      else return null;\n    })\n    .then((data) => {\n      if (!data) {\n       console.log('El response trajo error, por lo que se devuelve array vacio')\n        return [];\n      }\n      console.log('La cantidad de elementos que encuentra en Api es ', data);\n      const ApiData = data.results.map((character) => {\n        return {\n          id: character.id,\n          name: character.name,\n          status: character.status,\n          species: character.species,\n          image: character.image,\n          origin: character.origin.name,\n          episodes: character.episode.length,\n        };\n      });\n\n      console.log(\n        'La data extraida para la búsqueda por ',\n        filterName,\n        filterSpecie,\n        'es:'\n      );\n\n      return ApiData;\n    });\n};\n\nexport default GetApiData;"]},"metadata":{},"sourceType":"module"}